@file:Suppress("unused")

package com.narbase.kunafa.core.css

import com.narbase.kunafa.core.drawable.Color

// Color Properties
var RuleSet.color by RuleDelegate<Color?>("color")
var RuleSet.opacity by RuleDelegate<Double?>("opacity")
/*

// Background and Border Properties
var RuleSet.background by RuleDelegate("background")
var RuleSet.backgroundAttachment by RuleDelegate("background-attachment")
var RuleSet.backgroundBlendMode by RuleDelegate("background-blend-mode")
var RuleSet.backgroundColor by ColorPropertyHandler("background-color")
var RuleSet.backgroundImage by RuleDelegate("background-image")
var RuleSet.backgroundPosition by RuleDelegate("background-position")
var RuleSet.backgroundRepeat by RuleDelegate("background-repeat")
var RuleSet.backgroundClip by RuleDelegate("background-clip")
var RuleSet.backgroundOrigin by RuleDelegate("background-origin")
var RuleSet.backgroundSize by RuleDelegate("background-size")
var RuleSet.border by RuleDelegate("border")
var RuleSet.borderBottom by RuleDelegate("border-bottom")
var RuleSet.borderBottomColor by ColorPropertyHandler("border-bottom-color")
var RuleSet.borderBottomLeftRadius by RuleDelegate("border-bottom-left-radius")
var RuleSet.borderBottomRightRadius by RuleDelegate("border-bottom-right-radius")
var RuleSet.borderBottomStyle by RuleDelegate("border-bottom-style")
var RuleSet.borderBottomWidth by RuleDelegate("border-bottom-width")
var RuleSet.borderColor by ColorPropertyHandler("border-color")
var RuleSet.borderImage by RuleDelegate("border-image")
var RuleSet.borderImageOutset by RuleDelegate("border-image-outset")
var RuleSet.borderImageRepeat by RuleDelegate("border-image-repeat")
var RuleSet.borderImageSlice by RuleDelegate("border-image-slice")
var RuleSet.borderImageSource by RuleDelegate("border-image-source")
var RuleSet.borderImageWidth by RuleDelegate("border-image-width")
var RuleSet.borderLeft by RuleDelegate("border-left")
var RuleSet.borderLeftColor by ColorPropertyHandler("border-left-color")
var RuleSet.borderLeftStyle by RuleDelegate("border-left-style")
var RuleSet.borderLeftWidth by RuleDelegate("border-left-width")
var RuleSet.borderRadius by RuleDelegate("border-radius")
var RuleSet.borderRight by RuleDelegate("border-right")
var RuleSet.borderRightColor by ColorPropertyHandler("border-right-color")
var RuleSet.borderRightStyle by RuleDelegate("border-right-style")
var RuleSet.borderRightWidth by RuleDelegate("border-right-width")
var RuleSet.borderStyle by RuleDelegate("border-style")
var RuleSet.borderTop by RuleDelegate("border-top")
var RuleSet.borderTopColor by ColorPropertyHandler("border-top-color")
var RuleSet.borderTopLeftRadius by RuleDelegate("border-top-left-radius")
var RuleSet.borderTopRightRadius by RuleDelegate("border-top-right-radius")
var RuleSet.borderTopStyle by RuleDelegate("border-top-style")
var RuleSet.borderTopWidth by RuleDelegate("border-top-width")
var RuleSet.borderWidth by RuleDelegate("border-width")
var RuleSet.boxDecorationBreak by RuleDelegate("box-decoration-break")
var RuleSet.boxShadow by RuleDelegate("box-shadow")

// Basic Box Properties
var RuleSet.bottom by RuleDelegate("bottom")
var RuleSet.clear by RuleDelegate("clear")
var RuleSet.clip by RuleDelegate("clip")
var RuleSet.display by RuleDelegate("display")
var RuleSet.float by RuleDelegate("float")
var RuleSet.height by RuleDelegate("height")
var RuleSet.left by RuleDelegate("left")
var RuleSet.margin by RuleDelegate("margin")
var RuleSet.marginBottom by RuleDelegate("margin-bottom")
var RuleSet.marginLeft by RuleDelegate("margin-left")
var RuleSet.marginRight by RuleDelegate("margin-right")
var RuleSet.marginTop by RuleDelegate("margin-top")
var RuleSet.maxHeight by RuleDelegate("max-height")
var RuleSet.maxWidth by RuleDelegate("max-width")
var RuleSet.minHeight by RuleDelegate("min-height")
var RuleSet.minWidth by RuleDelegate("min-width")
var RuleSet.overflow by RuleDelegate("overflow")
var RuleSet.overflowX by RuleDelegate("overflow-x")
var RuleSet.overflowY by RuleDelegate("overflow-y")
var RuleSet.padding by RuleDelegate("padding")
var RuleSet.paddingBottom by RuleDelegate("padding-bottom")
var RuleSet.paddingLeft by RuleDelegate("padding-left")
var RuleSet.paddingRight by RuleDelegate("padding-right")
var RuleSet.paddingTop by RuleDelegate("padding-top")
var RuleSet.position by RuleDelegate("position")
var RuleSet.right by RuleDelegate("right")
var RuleSet.top by RuleDelegate("top")
var RuleSet.visibility by RuleDelegate("visibility")
var RuleSet.width by RuleDelegate("width")
var RuleSet.verticalAlign by RuleDelegate("vertical-align")
var RuleSet.zIndex by RuleDelegate("z-index")

// Flexible Box Layout
var RuleSet.alignContent by RuleDelegate("align-content")
var RuleSet.alignItems by RuleDelegate("align-items")
var RuleSet.alignSelf by RuleDelegate("align-self")
var RuleSet.flex by RuleDelegate("flex")
var RuleSet.flexBasis by RuleDelegate("flex-basis")
var RuleSet.flexDirection by RuleDelegate("flex-direction")
var RuleSet.flexFlow by RuleDelegate("flex-flow")
var RuleSet.flexGrow by RuleDelegate("flex-grow")
var RuleSet.flexShrink by RuleDelegate("flex-shrink")
var RuleSet.flexWrap by RuleDelegate("flex-wrap")
var RuleSet.justifyContent by RuleDelegate("justify-content")
var RuleSet.order by RuleDelegate("order")

// Text Properties
var RuleSet.hangingPunctuation by RuleDelegate("hanging-punctuation")
var RuleSet.hyphens by RuleDelegate("hyphens")
var RuleSet.letterSpacing by RuleDelegate("letter-spacing")
var RuleSet.lineBreak by RuleDelegate("line-break")
var RuleSet.lineHeight by RuleDelegate("line-height")
var RuleSet.overflowWrap by RuleDelegate("overflow-wrap")
var RuleSet.tabSize by RuleDelegate("tab-size")
var RuleSet.textAlign by RuleDelegate("text-align")
var RuleSet.textAlignLast by RuleDelegate("text-align-last")
var RuleSet.textIndent by RuleDelegate("text-indent")
var RuleSet.textJustify by RuleDelegate("text-justify")
var RuleSet.textTransform by RuleDelegate("text-transform")
var RuleSet.whiteSpace by RuleDelegate("white-space")
var RuleSet.wordBreak by RuleDelegate("word-break")
var RuleSet.wordSpacing by RuleDelegate("word-spacing")
var RuleSet.wordWrap by RuleDelegate("word-wrap")

// Text Decoration Properties
var RuleSet.textDecoration by RuleDelegate("text-decoration")
var RuleSet.textDecorationColor by ColorPropertyHandler("text-decoration-color")
var RuleSet.textDecorationLine by RuleDelegate("text-decoration-line")
var RuleSet.textDecorationStyle by RuleDelegate("text-decoration-style")
var RuleSet.textShadow by RuleDelegate("text-shadow")
var RuleSet.textUnderlinePosition by RuleDelegate("text-underline-position")

// Font Properties
var RuleSet.font by RuleDelegate("font")
var RuleSet.fontFamily by RuleDelegate("font-family")
var RuleSet.fontFeatureSettings by RuleDelegate("font-feature-settings")
var RuleSet.fontKerning by RuleDelegate("font-kerning")
var RuleSet.fontLanguageOverride by RuleDelegate("font-language-override")
var RuleSet.fontSize by RuleDelegate("font-size")
var RuleSet.fontSizeAdjust by RuleDelegate("font-size-adjust")
var RuleSet.fontStretch by RuleDelegate("font-stretch")
var RuleSet.fontStyle by RuleDelegate("font-style")
var RuleSet.fontSynthesis by RuleDelegate("font-synthesis")
var RuleSet.fontVariant by RuleDelegate("font-variant")
var RuleSet.fontVariantAlternates by RuleDelegate("font-variant-alternates")
var RuleSet.fontVariantCaps by RuleDelegate("font-variant-caps")
var RuleSet.fontVariantEastAsian by RuleDelegate("font-variant-east-asian")
var RuleSet.fontVariantLigatures by RuleDelegate("font-variant-ligatures")
var RuleSet.fontVariantNumeric by RuleDelegate("font-variant-numeric")
var RuleSet.fontVariantPosition by RuleDelegate("font-variant-position")
var RuleSet.fontWeight by RuleDelegate("font-weight")

// Writing Modes Properties
var RuleSet.direction by RuleDelegate("direction")
var RuleSet.textOrientation by RuleDelegate("text-orientation")
var RuleSet.textCombineUpright by RuleDelegate("text-combine-upright")
var RuleSet.unicodeBidi by RuleDelegate("unicode-bidi")
var RuleSet.writingMode by RuleDelegate("writing-mode")

// Table Properties
var RuleSet.borderCollapse by RuleDelegate("border-collapse")
var RuleSet.borderSpacing by RuleDelegate("border-spacing")
var RuleSet.captionSide by RuleDelegate("caption-side")
var RuleSet.emptyCells by RuleDelegate("empty-cells")
var RuleSet.tableLayout by RuleDelegate("table-layout")

// Lists and Counters Properties
var RuleSet.counterIncrement by RuleDelegate("counter-increment")
var RuleSet.counterReset by RuleDelegate("counter-reset")
var RuleSet.listStyle by RuleDelegate("list-style")
var RuleSet.listStyleImage by RuleDelegate("list-style-image")
var RuleSet.listStylePosition by RuleDelegate("list-style-position")
var RuleSet.listStyleType by RuleDelegate("list-style-type")

// Animation Properties
var RuleSet.animation by RuleDelegate("animation")
var RuleSet.animationDelay by RuleDelegate("animation-delay")
var RuleSet.animationDirection by RuleDelegate("animation-direction")
var RuleSet.animationDuration by RuleDelegate("animation-duration")
var RuleSet.animationFillMode by RuleDelegate("animation-fill-mode")
var RuleSet.animationIterationCount by RuleDelegate("animation-iteration-count")
var RuleSet.animationName by RuleDelegate("animation-name")
var RuleSet.animationPlayState by RuleDelegate("animation-play-state")
var RuleSet.animationTimingFunction by RuleDelegate("animation-timing-function")

// Transform Properties
var RuleSet.backfaceVisibility by RuleDelegate("backface-visibility")
var RuleSet.perspective by RuleDelegate("perspective")
var RuleSet.perspectiveOrigin by RuleDelegate("perspective-origin")
var RuleSet.transform by RuleDelegate("transform")
var RuleSet.transformOrigin by RuleDelegate("transform-origin")
var RuleSet.transformStyle by RuleDelegate("transform-style")

// Transitions Properties
var RuleSet.transition by RuleDelegate("transition")
var RuleSet.transitionProperty by RuleDelegate("transition-property")
var RuleSet.transitionDuration by RuleDelegate("transition-duration")
var RuleSet.transitionTimingFunction by RuleDelegate("transition-timing-function")
var RuleSet.transitionDelay by RuleDelegate("transition-delay")

// Basic User Interface Properties
var RuleSet.boxSizing by RuleDelegate("box-sizing")
var RuleSet.content by ContentPropertyHandler("content")
var RuleSet.cursor by RuleDelegate("cursor")
var RuleSet.imeMode by RuleDelegate("ime-mode")
var RuleSet.navDown by RuleDelegate("nav-down")
var RuleSet.navIndex by RuleDelegate("nav-index")
var RuleSet.navLeft by RuleDelegate("nav-left")
var RuleSet.navRight by RuleDelegate("nav-right")
var RuleSet.navUp by RuleDelegate("nav-up")
var RuleSet.outline by RuleDelegate("outline")
var RuleSet.outlineColor by ColorPropertyHandler("outline-color")
var RuleSet.outlineOffset by RuleDelegate("outline-offset")
var RuleSet.outlineStyle by RuleDelegate("outline-style")
var RuleSet.outlineWidth by RuleDelegate("outline-width")
var RuleSet.resize by RuleDelegate("resize")
var RuleSet.textOverflow by RuleDelegate("text-overflow")

// Multi-column Layout Properties
var RuleSet.breakAfter by RuleDelegate("break-after")
var RuleSet.breakBefore by RuleDelegate("break-before")
var RuleSet.breakInside by RuleDelegate("break-inside")
var RuleSet.columnCount by RuleDelegate("column-count")
var RuleSet.columnFill by RuleDelegate("column-fill")
var RuleSet.columnGap by RuleDelegate("column-gap")
var RuleSet.columnRule by RuleDelegate("column-rule")
var RuleSet.columnRuleColor by ColorPropertyHandler("column-rule-color")
var RuleSet.columnRuleStyle by RuleDelegate("column-rule-style")
var RuleSet.columnRuleWidth by RuleDelegate("column-rule-width")
var RuleSet.columnSpan by RuleDelegate("column-span")
var RuleSet.columnWidth by RuleDelegate("column-width")
var RuleSet.columns by RuleDelegate("columns")
var RuleSet.widows by RuleDelegate("widows")

// Paged Media
var RuleSet.orphans by RuleDelegate("orphans")
var RuleSet.pageBreakAfter by RuleDelegate("page-break-after")
var RuleSet.pageBreakBefore by RuleDelegate("page-break-before")
var RuleSet.pageBreakInside by RuleDelegate("page-break-inside")

// Generated Content for Paged Media
var RuleSet.marks by RuleDelegate("marks")
var RuleSet.quotes by RuleDelegate("quotes")

// Filter Effects Properties
var RuleSet.filter by RuleDelegate("filter")

// Image Values and Replaced Content
var RuleSet.imageOrientation by RuleDelegate("image-orientation")
var RuleSet.imageRendering by RuleDelegate("image-rendering")
var RuleSet.imageResolution by RuleDelegate("image-resolution")
var RuleSet.objectFit by RuleDelegate("object-fit")
var RuleSet.objectPosition by RuleDelegate("object-position")

// Masking Properties
var RuleSet.mask by RuleDelegate("mask")
var RuleSet.maskType by RuleDelegate("mask-type")

// Speech Properties
var RuleSet.mark by RuleDelegate("mark")
var RuleSet.markAfter by RuleDelegate("mark-after")
var RuleSet.markBefore by RuleDelegate("mark-before")
var RuleSet.phonemes by RuleDelegate("phonemes")
var RuleSet.rest by RuleDelegate("rest")
var RuleSet.restAfter by RuleDelegate("rest-after")
var RuleSet.restBefore by RuleDelegate("rest-before")
var RuleSet.voiceBalance by RuleDelegate("voice-balance")
var RuleSet.voiceDuration by RuleDelegate("voice-duration")
var RuleSet.voicePitch by RuleDelegate("voice-pitch")
var RuleSet.voicePitchRange by RuleDelegate("voice-pitch-range")
var RuleSet.voiceRate by RuleDelegate("voice-rate")
var RuleSet.voiceStress by RuleDelegate("voice-stress")
var RuleSet.voiceVolume by RuleDelegate("voice-volume")

// Marquee Properties
var RuleSet.marqueeDirection by RuleDelegate("marquee-direction")
var RuleSet.marqueePlayCount by RuleDelegate("marquee-play-count")
var RuleSet.marqueeSpeed by RuleDelegate("marquee-speed")
var RuleSet.marqueeStyle by RuleDelegate("marquee-style")

// Exotic
var RuleSet.zoom by RuleDelegate("zoom")
var RuleSet.src by RuleDelegate("src") // @font-face
*/

fun RuleSet.active(rules: RuleSet.() -> Unit) = this.addPseudo(":active", rules)
fun RuleSet.after(rules: RuleSet.() -> Unit) = this.addPseudo(":after", rules)
fun RuleSet.before(rules: RuleSet.() -> Unit) = this.addPseudo(":before", rules)
fun RuleSet.checked(rules: RuleSet.() -> Unit) = this.addPseudo(":checked", rules)
fun RuleSet.disabled(rules: RuleSet.() -> Unit) = this.addPseudo(":disabled", rules)
fun RuleSet.empty(rules: RuleSet.() -> Unit) = this.addPseudo(":empty", rules)
fun RuleSet.enabled(rules: RuleSet.() -> Unit) = this.addPseudo(":enabled", rules)
fun RuleSet.firstChild(rules: RuleSet.() -> Unit) = this.addPseudo(":first-child", rules)
fun RuleSet.firstLetter(rules: RuleSet.() -> Unit) = this.addPseudo(":first-letter", rules)
fun RuleSet.firstLine(rules: RuleSet.() -> Unit) = this.addPseudo(":first-line", rules)
fun RuleSet.firstOfType(rules: RuleSet.() -> Unit) = this.addPseudo(":first-of-type", rules)
fun RuleSet.focus(rules: RuleSet.() -> Unit) = this.addPseudo(":focus", rules)
fun RuleSet.hover(rules: RuleSet.() -> Unit) = this.addPseudo(":hover", rules)
fun RuleSet.inRange(rules: RuleSet.() -> Unit) = this.addPseudo(":in-range", rules)
fun RuleSet.invalid(rules: RuleSet.() -> Unit) = this.addPseudo(":invalid", rules)
fun RuleSet.lastChild(rules: RuleSet.() -> Unit) = this.addPseudo(":last-child", rules)
fun RuleSet.lastOfType(rules: RuleSet.() -> Unit) = this.addPseudo(":last-of-type", rules)
fun RuleSet.onlyChild(rules: RuleSet.() -> Unit) = this.addPseudo(":only-child", rules)
fun RuleSet.onlyOfType(rules: RuleSet.() -> Unit) = this.addPseudo(":only-of-type", rules)
fun RuleSet.optional(rules: RuleSet.() -> Unit) = this.addPseudo(":optional", rules)
fun RuleSet.outOfRange(rules: RuleSet.() -> Unit) = this.addPseudo(":out-of-range", rules)
fun RuleSet.readOnly(rules: RuleSet.() -> Unit) = this.addPseudo(":read-only", rules)
fun RuleSet.readWrite(rules: RuleSet.() -> Unit) = this.addPseudo(":read-write", rules)
fun RuleSet.required(rules: RuleSet.() -> Unit) = this.addPseudo(":required", rules)
fun RuleSet.root(rules: RuleSet.() -> Unit) = this.addPseudo(":root", rules)
fun RuleSet.selection(rules: RuleSet.() -> Unit) = this.addPseudo(":selection", rules)
fun RuleSet.target(rules: RuleSet.() -> Unit) = this.addPseudo(":target", rules)
fun RuleSet.unvisited(rules: RuleSet.() -> Unit) = this.addPseudo(":link", rules)
fun RuleSet.valid(rules: RuleSet.() -> Unit) = this.addPseudo(":valid", rules)
fun RuleSet.visited(rules: RuleSet.() -> Unit) = this.addPseudo(":visited", rules)

fun RuleSet.media(name: String, rules: RuleSet.() -> Unit) = this.addAtRule("media($name)", rules)